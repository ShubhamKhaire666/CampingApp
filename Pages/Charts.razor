@page "/Charts"
@using Syncfusion.Blazor.Charts
@inject ISalesReportOrderService SalesReportOrderService

<h3>Charts</h3>


<div class="mt-3">
	<SfChart Title="Sales Gross /Month">
		<ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.Category"></ChartPrimaryXAxis>
		<ChartSeriesCollection>
			<ChartSeries DataSource="@groupedFieldPriceData"
				XName="GroupedFieldKey" YName="Price" Type="ChartSeriesType.Bar">
			</ChartSeries>
		</ChartSeriesCollection>
	</SfChart>
</div>

<div class="mt-3">
	<SfAccumulationChart Title="Qty/Product Category">
		<AccumulationChartLegendSettings Visible="true" Position="LegendPosition.Top">
		</AccumulationChartLegendSettings>	
		<AccumulationChartTooltipSettings Enable="true">
		</AccumulationChartTooltipSettings>
		<AccumulationChartSeriesCollection>
			<AccumulationChartSeries DataSource="@groupedFieldQtyData" XName="GroupedFieldKey"
				YName="Qty" Radius="70%" InnerRadius="40%" Name="QtyPerProductCategory"
				Explode="true" ExplodeOffset="10%" ExplodeIndex="3">
				<AccumulationDataLabelSettings Visible="true" Name="Label">
					<AccumulationChartDataLabelFont FontWeight="600" Color="White">

					</AccumulationChartDataLabelFont>
				</AccumulationDataLabelSettings>
		</AccumulationChartSeries>
		</AccumulationChartSeriesCollection>
	</SfAccumulationChart>
</div>

@code {

	List<GroupedFieldPriceModel> groupedFieldPriceData { get; set; }
	List<GroupedFieldQtyModel> groupedFieldQtyData { get; set; }


	protected override async Task OnInitializedAsync()
	{
		groupedFieldPriceData = await SalesReportOrderService.GetEmployeePricePerMonthData();

		groupedFieldQtyData = await SalesReportOrderService.GetQtyPerProductCategory();
	}
}
